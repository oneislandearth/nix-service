#!/bin/bash

# Describe the build function
function build() {

  # Build the modules in nix
  nix-build modules.nix -o .nix/dist

  # Remove the modules installed by yarn
  rm node_modules -rf

  # Get the current package name
  name=$( cat package.json | jq -r '.name' ) 

  # Link to the modules built by nix
  ln -s $PWD/.nix/dist/libexec/$name/node_modules $PWD/node_modules
}

# Deploy the service
function serve() {

  # Check if spstic is not installed
  if [ ! -f .nix/tools/spstic-0.0.2/spstic ]; then

    # Log a message for install
    echo -e "\x1b[34m\x1b[1m[nix-service]\x1b[0m Installing spstic...\n"

    # Make the tools folder
    mkdir -p .nix/tools

    # Install spastic to the tools
    curl -s --compressed  https://codeload.github.com/danzlarkin/spstic/tar.gz/refs/tags/v0.0.2 | tar xz -C .nix/tools
  fi

  # Log a message for install
  echo -e "\x1b[34m\x1b[1m[nix-service]\x1b[0m Specify any spstic flags?\n"

  # Ask for flags
  read -p 'flags: ' flags

  # Log out the serve message
  echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m Serving the environment with spstic\n"

  # Run spstic
  .nix/tools/spstic-0.0.2/spstic --local $flags
}

# Describe the reconfigure function
function reconfigure() {

  # Remove the node modules
  rm node_modules -rf

  # Install the modules from yarn
  yarn install -s

  # Convert the modules to nix
  yarn2nix > yarn.nix

  # Build
  build
}

# Welcome message
echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m\n"

# Handle the operations
PS3=$'\n'"Select operation: "

select opt in build serve reconfigure; do

  case $opt in
    build)
      echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m Building the environment\n"
      build
      break
      ;;
    serve)
      echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m Preparing the environment\n"
      serve 
      break
      ;;
    reconfigure)
      echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m Reconfiguring all packages with yarn\n"
      reconfigure
      break
      ;;
    *) 
      echo -e "\n\x1b[34m\x1b[1m[nix-service]\x1b[0m Not a valid command\n"
      exit
      ;;
  esac
done